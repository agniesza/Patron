@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<Patron.Models.Post>
@{
    ViewBag.Title = "Posty";
}

<table class="table">
    <tr>
        <th>
            <p>Autor</p>
        </th>
        
        <th>
            <p>Treść</p>
        </th>
        
        <th>
            @Html.ActionLink("Data", "ShowPatronPosts", new { sortOrder = ViewBag.DateSortParm })

        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Author.FirstName)  @Html.DisplayFor(modelItem => item.Author.LastName)
        </td>
        <td>
            @Html.ActionLink(item.Title, "Details", new { id = item.ID })

        </td>
      
        <td>
            @Html.DisplayFor(modelItem => item.Date)
        </td>
        <td>
            @Html.ActionLink("Edytuj", "Edit", new { id = item.ID }) |
            @Html.ActionLink("Usuń", "Delete", new { id = item.ID })
        </td>
    </tr>
    }

</table>
<div>
    @if (Context.User.IsInRole("Admin"))
    {
        @Html.ActionLink("Powrót do listy postów", "Index")
    }
    else
    {
        @Html.ActionLink("Powrót do profilu", "PatronHomePage",
                           "Patrons", new { id = ViewBag.patron.ID }, null)
    }
</div>

Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) z @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("ShowPatronPosts",
    new { page }))
